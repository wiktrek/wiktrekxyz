---
type Category = "frontend" | "backend" | "other";
interface Skill {
  name: string;
  category: Category;
  image: string;
}
import Skill from "~/components/Skill";
const skills: Skill[] = [
  {
    name: "react",
    category: "frontend",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/react/react-original.svg"
  },
  {
    name: "nextjs",
    category: "frontend",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/nextjs/nextjs-plain.svg"
  },
  {
    name: "rust",
    category: "other",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/rust/rust-original.svg"
  },
  {
    name: "typescript",
    category: "frontend",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/typescript/typescript-original.svg"
  },
  {
    name: "svelte",
    category: "frontend",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/svelte/svelte-original.svg"
  },
  {
    name: "tailwind",
    category: "frontend",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/tailwindcss/tailwindcss-original.svg"
  },
  {
    name: "node",
    category: "backend",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/nodejs/nodejs-plain-wordmark.svg"
  },
  {
    name: "git",
    category: "other",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/git/git-original.svg"
  },
  {
    name: "astro",
    category: "frontend",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/astro/astro-original.svg"
  },
  {
    name: "vercel",
    category: "other",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/vercel/vercel-original.svg"
  },
  {
    name: "vitejs",
    category: "frontend",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/vitejs/vitejs-original.svg"
  },
  {
    name: "javascript",
    category: "frontend",
    image: "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/javascript/javascript-original.svg"
  },
  {
    name: "bevy",
    category: "other",
    image: "https://cdn.jsdelivr.net/gh/bevyengine/bevy/assets/branding/bevy_bird_dark.svg"
  }
];
---

<script>
  const buttons = document.querySelectorAll("button.button-class");
  const skills = document.querySelectorAll("div.skill");
  buttons.forEach((button) => {
    button.addEventListener("click", () => {
      const category = button.id.split("-")[1];
      reset();
      button.classList.add("text-primary-foreground");
      button.classList.add("underline");

      if (category == "all") {
        show_all();
      } else {
        hide_all();
        show_category(category);
      }
    });
  });
  function reset() {
    buttons.forEach((b) => {
      b.classList.remove("text-primary-foreground");
      b.classList.remove("underline");
    });
  }
  function show_category(category: string) {
    skills.forEach((skill) => {
      if (skill.id == category) skill.classList.remove("hidden");
    });
  }
  function show_all() {
    skills.forEach((skill) => {
      skill.classList.remove("hidden");
    });
  }
  function hide_all() {
    skills.forEach((skill) => {
      skill.classList.add("hidden");
    });
  }
</script>

<div class="h-96">
  <section id="skills">
    <p class="text-5xl">Skills</p>
    <div class="font-medium text-primary-foreground">
      <button
        class="text-2xl underline button-class"
        id="button-all"
      >
        all</button
      >

      <button
        class="text-2xl button-class"
        id="button-frontend">frontend</button
      >
      <button
        class="text-2xl button-class"
        id="button-backend">backend</button
      >
      <button
        class="text-2xl button-class"
        id="button-other">other</button
      >
    </div>
    <div class="flex justify-center">
      <div class="grid justify-center gap-2 pt-6 grid-cols-4 md:grid-cols-9">
        {
          skills
            .sort((a, b) => {
              // replace frontend with 111 so frontend skills are first 
              // add name so that it sorts with category and name
              let c = (a.category == "frontend" ? "111" : a.category) + a.name;
              let d = (b.category == "frontend" ? "111" : b.category) + b.name;
              if (c < d) {
                  return -1;
              }
              if (c > d) {
                  return 1;
              }
              return 0;
            })
            .map((s) => (
              <Skill
                category={s.category}
                text={s.name}
                icon={s.image}
                client:idle
              />
            ))
        }
      </div>
    </div>
  </section>
</div>

<!-- <div><div></div></div> -->
